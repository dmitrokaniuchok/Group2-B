{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Tasteorama",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is an app for saving and adding recipes."
  },
  "servers": [
    {
      "url": "https://group2-b.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Registration and authentication"
    },
    {
      "name": "Users",
      "description": "User information"
    },
    {
      "name": "Categories",
      "description": "Recipe Categories"
    },
    {
      "name": "Ingredients",
      "description": "Ingredients"
    },
    {
      "name": "Recipes",
      "description": "Recipes operation"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register user",
        "operationId": "registerUser",
        "description": "Create a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/register"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/register"
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Authenticate a user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/user/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh tokens",
        "operationId": "refreshTokens",
        "description": "Get new access and refresh tokens",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/token"
                }
              }
            }
          },
          "403": {
            "description": "Invalid or expired refresh token"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Invalidate refresh token and logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get information about the current user",
        "operationId": "getCurrentUsers",
        "description": "Returns the name and initial of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Current user fetched successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Dmytro"
                        },
                        "initial": {
                          "type": "string",
                          "example": "D"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "User with this email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 409
                    },
                    "message": {
                      "type": "string",
                      "example": "User with this email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get all categories",
        "operationId": "getAllCategories",
        "description": "Retrieves a list of all categories",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "The identifier of the category",
                            "example": "64d2a42f8c1b2e001f4d12cd"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the category",
                            "example": "Dessert"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/ingredients": {
      "get": {
        "tags": ["Ingredients"],
        "summary": "Get all ingredients",
        "operationId": "getAllIngredients",
        "description": "Retrieves a list of all ingredients",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "The identifier of the ingredient",
                            "example": "64d2a42f8c1b2e001f4d12cd"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the ingredient",
                            "example": "Tomato"
                          },
                          "desc": {
                            "type": "string",
                            "description": "Description of the ingredient",
                            "example": "Fresh red Tomato"
                          },
                          "img": {
                            "type": "string",
                            "description": "URL of the image",
                            "example": "http://example.com/tomato.jpg"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/recipes": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Search recipes",
        "operationId": "searchRecipes",
        "description": "Search recipes by category, ingredient, or text in the title with pagination support",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by recipe category (optional)",
            "example": "Dessert"
          },
          {
            "in": "query",
            "name": "ingredient",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by ingredient name (optional)",
            "example": "Sugar"
          },
          {
            "in": "query",
            "name": "title",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Partial match in recipe title (optional)",
            "example": "Cake"
          },
          {
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 12
            },
            "description": "Number of recipes per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipes matching search criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipes retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Recipe"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/recipes/{recipeId}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get recipe by id",
        "operationId": "getRecipeById",
        "description": "Get recipe by id",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28898051"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get recipe by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found recipe with id 6462a8f74c3d0ddd28898051!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/recipe"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": ["Recipes"],
        "summary": "Add recipe to favorites",
        "operationId": "addFavoriteRecipe",
        "description": "Add a recipe to the user favorite list",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28898051"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe added to favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": ["Recipes"],
        "summary": "Remove recipe from favorites",
        "operationId": "deleteFavoriteRecipe",
        "description": "Remove a recipe from the user favorite list",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28898051"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe removed from favorites successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe removed from favorites!"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/recipes/my": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get own recipes",
        "operationId": "getOwnRecipes",
        "description": "Retrieves a list of recipes created by the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user's recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User recipes fetched successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Recipe"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/recipes/add": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Create own recipe",
        "operationId": "createOwnRecipe",
        "description": "Create a new recipe by the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["title", "category", "ingredients"],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Chocolate Cake"
                  },
                  "category": {
                    "type": "string",
                    "example": "Dessert"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["2 eggs", "100g sugar"]
                  },
                  "instructions": {
                    "type": "string",
                    "example": "Mix all ingredients and bake for 30 minutes."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["status", "message", "data"],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Recipe created successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/addRecipe"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "register": {
        "type": "object",
        "required": ["name", "email", "password", "confirmPassword"],
        "properties": {
          "name": {
            "description": "User`s name",
            "type": "string",
            "example": "Denis"
          },
          "email": {
            "description": "User`s email",
            "type": "string",
            "example": "invoke@gmail.com"
          },
          "password": {
            "description": "User`s password",
            "type": "string"
          },
          "confirmPassword": {
            "description": " Confirm your password",
            "type": "string"
          }
        }
      },
      "login": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "description": "User`s email",
            "type": "string",
            "example": "invoke@gmail.com",
            "format": "email"
          },
          "password": {
            "description": "User`s password",
            "type": "string",
            "format": "password",
            "example": "qwerty12345"
          }
        }
      },
      "token": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Recipe": {
        "type": "object",
        "required": [
          "title",
          "category",
          "area",
          "instructions",
          "description",
          "ingredients"
        ],
        "properties": {
          "title": {
            "type": "string",
            "example": "Spaghetti Bolognese"
          },
          "category": {
            "type": "string",
            "example": "Main Course"
          },
          "owner": {
            "type": "string",
            "format": "objectId",
            "example": "64c8d958249fae54bae90bb9"
          },
          "area": {
            "type": "string",
            "example": "Italian"
          },
          "instructions": {
            "type": "string",
            "example": "Cook pasta, prepare sauce, mix together."
          },
          "description": {
            "type": "string",
            "example": "Classic Italian pasta with meat sauce."
          },
          "thumb": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/spaghetti.jpg"
          },
          "time": {
            "type": "string",
            "example": "30 min"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "measure"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredient ID",
                  "example": "640c2dd963a319ea671e3818"
                },
                "measure": {
                  "type": "string",
                  "example": "200g"
                }
              }
            }
          }
        }
      },
      "recipe": {
        "type": "object",
        "required": [
          "_id",
          "title",
          "category",
          "owner",
          "area",
          "instructions",
          "description",
          "thumb",
          "time",
          "ingredients",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "description": "Recipe id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "title": {
            "description": "Recipe name",
            "type": "string",
            "example": "BBQ Pork Sloppy Joes"
          },
          "category": {
            "description": "Recipe category",
            "type": "string",
            "example": "Soup"
          },
          "owner": {
            "type": "string",
            "description": "User ID",
            "example": "64d1b8a7e43d5c001fbc2e91"
          },
          "area": {
            "description": "Recipe area",
            "type": "string",
            "example": "American"
          },
          "instructions": {
            "description": "Recipe instructions",
            "type": "string",
            "example": "Boil water, add beetroot, cabbage, potatoes..."
          },
          "description": {
            "description": "Recipe description",
            "type": "string",
            "example": "A classic British cake made with almond sponge cake and covered with marzipan"
          },
          "thumb": {
            "description": "Recipe picture",
            "type": "string",
            "example": "https://example.com/images/borscht.jpg"
          },
          "time": {
            "description": "Recipe time cooking",
            "type": "string",
            "example": "90 min"
          },
          "ingredients": {
            "description": "Recipe ingredients description",
            "type": "array",
            "items": {
              "type": "object",
              "required": ["id", "measure"],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Ingredient ID",
                  "example": "64d1b8a7e43d5c001fbc2e92"
                },
                "measure": {
                  "type": "string",
                  "example": "200 g"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-08-08T12:34:56.789Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2023-08-08T13:45:56.789Z"
          }
        }
      },
      "addRecipe": {
        "type": "object",
        "required": [
          "title",
          "cookingTime",
          "category",
          "owner",
          "ingredients",
          "instructions"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "example": "64c8d958249fae54bae90bb9"
          },
          "title": {
            "type": "string",
            "example": "Chocolate Cake"
          },
          "description": {
            "type": "string",
            "example": "Delicious homemade chocolate cake"
          },
          "cookingTime": {
            "type": "integer",
            "example": 45
          },
          "calories": {
            "type": "integer",
            "example": 320
          },
          "category": {
            "type": "string",
            "example": "Dessert"
          },
          "owner": {
            "type": "string",
            "description": "User ID who created the recipe",
            "example": "64c8d958249fae54bae90bb9"
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "amount"],
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sugar"
                },
                "amount": {
                  "type": "string",
                  "example": "100g"
                }
              }
            }
          },
          "instructions": {
            "type": "string",
            "example": "Mix all ingredients and bake for 30 minutes at 180°C."
          },
          "image": {
            "type": "string",
            "example": "https://example.com/uploads/recipes/chocolate-cake.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-30T12:34:56.000Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-08-30T12:40:00.000Z"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "ID is not valid"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Not Found"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": ["status", "message", "data"],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                },
                "data": {
                  "type": "object",
                  "required": ["message"],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Something went wrong"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
